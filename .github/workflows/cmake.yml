name: CMake
on: push

jobs:
  build:
    env:
      VULKAN_SDK: C:/VulkanSDK

    strategy:
      fail-fast: false
      matrix:
        config:
          - os: windows-2019
            working_directory: \build\
            extra_cmake: ' -A "x64" -D CMAKE_CXX_COMPILER=cl'
          - os: windows-2022
            working_directory: \build\
            extra_cmake: ' -A "x64" -D CMAKE_CXX_COMPILER=cl'
          - os: ubuntu-20.04
            working_directory: /build/
            extra_cmake: "-D CMAKE_CXX_COMPILER=g++-10"
        build_type: [Debug, Release]

    runs-on: ${{matrix.config.os}}
    steps:
      - name: Install dependencies - Linux
        if: runner.os == 'Linux'
        run: |
          wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
          sudo wget -qP /etc/apt/sources.list.d https://packages.lunarg.com/vulkan/lunarg-vulkan-focal.list
          sudo apt-get update
          sudo apt-get install vulkan-sdk xorg-dev
      - name: Install dependencies - Windows
        if: runner.os == 'Windows'
        run: |
          iwr https://sdk.lunarg.com/sdk/download/latest/windows/vulkan-sdk.exe -outfile vulkan-sdk.exe
          ./vulkan-sdk install --accept-licenses --confirm-command --root $env:VULKAN_SDK

      - uses: actions/checkout@v2

      - name: Create build directory
        run: mkdir -p ${{ github.workspace }}${{ matrix.config.working_directory }}

      - uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build/_deps/
          key: ${{ matrix.config.os }}-build-${{ matrix.build_type }}-${{ github.ref_name }}-${{ hashFiles('.github/workflows/cmake.yml') }}

      - name: Configure CMake
        working-directory: ${{ github.workspace }}${{ matrix.config.working_directory }}
        run: cmake ${{ matrix.config.extra_cmake }} ..

      - name: Build lib
        working-directory: ${{ github.workspace }}${{ matrix.config.working_directory }}
        run: cmake --build . --config ${{ matrix.build_type }}

      - name: Run tests
        working-directory: ${{ github.workspace }}${{ matrix.config.working_directory }}
        run: ctest --config ${{ matrix.build_type }} --output-on-failure
