name: AppImage
on:
  push:
    tags:        
      - '*'

jobs:
  appimage:
    env:
      VULKAN_SDK: C:/VulkanSDK

    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-22.04
            working_directory: /build/
            extra_cmake: "-DCMAKE_INSTALL_PREFIX=/usr -DMIMALLOC_ENABLED=OFF"
            compiler: "g++-12"

        build_type: [Release]

    runs-on: ${{matrix.config.os}}
    name: ${{ matrix.config.os }} - ${{ matrix.config.compiler }} - ${{ matrix.build_type }}
    steps:
      - name: Install dependencies - Linux
        if: runner.os == 'Linux'
        run: |
          wget -qO- https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo tee /etc/apt/trusted.gpg.d/lunarg.asc
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.3.231-jammy.list https://packages.lunarg.com/vulkan/1.3.231/lunarg-vulkan-1.3.231-jammy.list
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.config.compiler }} vulkan-sdk xorg-dev libgtk-3-dev fuse

      - uses: actions/checkout@v3.1.0

      - name: Create build directory
        run: mkdir -p ${{ github.workspace }}${{ matrix.config.working_directory }}

      - uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/build/_deps/
          key: ${{ matrix.config.os }}-${{ matrix.config.compiler }}-${{ matrix.build_type }}-${{ github.ref_name }}-${{ hashFiles('.github/workflows/cmake.yml') }}
          restore-keys: |
            ${{ matrix.config.os }}-${{ matrix.config.compiler }}-${{ matrix.build_type }}-dev-${{ hashFiles('.github/workflows/cmake.yml') }}
            ${{ matrix.config.os }}-${{ matrix.config.compiler }}-${{ matrix.build_type }}-dev-

      - name: Configure CMake
        working-directory: ${{ github.workspace }}${{ matrix.config.working_directory }}
        run: cmake -D CMAKE_CXX_COMPILER=${{ matrix.config.compiler }} ${{ matrix.config.extra_cmake }} ..

      - name: Build Editor
        working-directory: ${{ github.workspace }}${{ matrix.config.working_directory }}
        run: cmake --build . --config ${{ matrix.build_type }}
      
      - name: Create AppDir
        run: | 
          mkdir -p ${{ github.workspace }}/AppDir
          make -C ${{ github.workspace }}${{ matrix.config.working_directory }} DESTDIR=${{ github.workspace }}/AppDir install

      - name: Install and run appimage-builder
        run: |
          wget -O appimage-builder-x86_64.AppImage https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.1.0/appimage-builder-1.1.0-x86_64.AppImage
          chmod +x appimage-builder-x86_64.AppImage
          ./appimage-builder-x86_64.AppImage --skip-tests

      - uses: actions/upload-artifact@v3
        with:
          name: pivot-appimage-${{ github.ref_name }}
          path: ${{ github.workspace }}/Pivot*.AppImage
          if-no-files-found: error
          retention-days: 1
