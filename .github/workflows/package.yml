name: Package
on:
  push:
    tags:        
      - '*'

jobs:
  build:
    env:
      VULKAN_SDK: C:/VulkanSDK

    strategy:
      fail-fast: false
      matrix:
        config:
          - os: windows-2022
            package_name: 'pivot-windows'
            working_directory: \build\
            extra_cmake: ' -A "x64"'
            compiler: 'cl'

          - os: ubuntu-22.04
            package_name: 'pivot-linux'
            working_directory: /build/
            extra_cmake: ''
            compiler: 'g++-12'

        build_type: [Release]

    runs-on: ${{matrix.config.os}}
    name: ${{ matrix.config.os }} - ${{ matrix.config.compiler }} - ${{ matrix.build_type }}
    steps:
      - name: Install dependencies - Linux
        if: runner.os == 'Linux'
        run: |
          wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.3.211-focal.list https://packages.lunarg.com/vulkan/1.3.211/lunarg-vulkan-1.3.211-focal.list
          sudo apt update
          sudo apt install -y ${{ matrix.config.compiler }} vulkan-sdk xorg-dev libgtk-3-dev

      - name: Install dependencies - Windows
        if: runner.os == 'Windows'
        run: |
          iwr https://sdk.lunarg.com/sdk/download/1.3.211.0/windows/vulkan-sdk.exe -outfile vulkan-sdk.exe
          ./vulkan-sdk install --accept-licenses --confirm-command --root $env:VULKAN_SDK

      - uses: rui314/setup-mold@v1

      - uses: actions/checkout@v2

      - name: Create build directory
        run: mkdir -p ${{ github.workspace }}${{ matrix.config.working_directory }}

      - uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/build/_deps/
          key: ${{ matrix.config.os }}-${{ matrix.config.compiler }}-${{ matrix.build_type }}-${{ github.ref_name }}-${{ hashFiles('.github/workflows/cmake.yml') }}
          restore-keys: |
              ${{ matrix.config.os }}-${{ matrix.config.compiler }}-${{ matrix.build_type }}-dev-${{ hashFiles('.github/workflows/cmake.yml') }}
              ${{ matrix.config.os }}-${{ matrix.config.compiler }}-${{ matrix.build_type }}-dev-

      - name: Configure CMake
        working-directory: ${{ github.workspace }}${{ matrix.config.working_directory }}
        run: cmake -D CMAKE_CXX_COMPILER=${{ matrix.config.compiler }} ${{ matrix.config.extra_cmake }} ..

      - name: Build lib
        working-directory: ${{ github.workspace }}${{ matrix.config.working_directory }}
        run: cmake --build . --config ${{ matrix.build_type }}

      - name: Package
        working-directory: ${{ github.workspace }}${{ matrix.config.working_directory }}
        run: cpack
      
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.config.package_name }}-${{ github.ref_name }}
          path: |
            ${{github.workspace}}${{ matrix.config.working_directory }}*.zip
          retention-days: 1

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Create release directory
        run: mkdir -p ${{ github.workspace }}/release

      - uses: actions/download-artifact@v3
        with:
          name: pivot-linux-${{ github.ref_name }}
          path: ${{ github.workspace }}/release

      - uses: actions/download-artifact@v3
        with:
          name: pivot-windows-${{ github.ref_name }}
          path: ${{ github.workspace }}/release

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: |
            ${{ github.workspace }}/release/*